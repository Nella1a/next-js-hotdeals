// tried to use puppeteer


// ***** Page: index.js ****
export default function Home() {
  const browserObject = require('./browser');
  const scraperController = require('./pageController');

  // Start the browser and create a browser instance
  const browserInstance = browserObject.startBrowser();

  // Pass the browser instance to the scraper controller
  scraperController(browserInstance);

  return;
}


// ***** Page: pageScraper.js ****
const scraperObject = {
  url: 'https://www.moemax.at/c/sale',
  async scraper(browser) {
    const page = await browser.newPage();
    console.log(`Navigating to ${this.url}...`);
    // navigate to the page
    await page.goto(this.url);
    // wait for cookie box to render
    await page.waitForSelector(
      'button[data-purpose="cookieBar.button.accept"]',
    );
    // click button to accept cookie
    await page.click('button[data-purpose="cookieBar.button.accept"]');

    // wait for required DOM-Element to be rendered
    // await page.waitForSelector(
    //   '._A2l276x-jfhF+Nxw._Qqfpyw9j-SjRVm7g._gYprK3CI4BUOU2G5._pWwEh6T7DX0vxNcl',
    // );

    // click first category
    await page.click('a[href="/c/wohnzimmer-sale"]');
    await browser.close();
  },
};
module.exports = scraperObject;

// *****  Page browser.js ****
const puppeteer = require('puppeteer');
async function startBrowser() {
  let browser;
  try {
    console.log('Opening the browser......');
    browser = await puppeteer.launch({
      headless: false,
      args: ['--disable-setuid-sandbox'],
      ignoreHTTPSErrors: false,
    });
  } catch (err) {
    console.log('Could not create a browser instance => : ', err);
  }
  return browser;
}

module.exports = {
  startBrowser,
};

//****** Page: pageController *****
const pageScraper = require('./pageScraper');
async function scrapeAll(browserInstance) {
  let browser;
  try {
    browser = await browserInstance;
    await pageScraper.scraper(browser);
  } catch (err) {
    console.log('Could not resolve the browser instance => ', err);
  }
}

module.exports = (browserInstance) => scrapeAll(browserInstance);
